@using ContosoUniversity;
@model PaginatedList<IConnect_Training_.Net_Core_project.Models.Patient>
@{
    ViewData["Title"] = "Index";
}

<h1>Patients List</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Add A New Patient</a>
</p>
<form class="form-inline" asp-action="Index" method="get">
    <div class="form-group mr-2 mb-2">
        <input type="text" name="SearchString" class="form-control" id="inputPassword2" placeholder="Find by name..." value="@ViewData["CurrentFilter"]">
    </div>
    <button type="submit" value="Search" class="btn btn-primary mb-2 mr-2">Search</button>
    <a asp-action="Index">Back to Full List</a>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">FirstName</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">LastName</a>
            </th>
            <th>
                Birthday
            </th>
            <th>
                Gender
            </th>
            <th>
                PhoneNumber
            </th>
            <th>
                Email
            </th>
            <th>
                Address
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">RegisterationDate</a>
            </th>
            <th>
                SSN
            </th>
            <th>
                Country
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegisterationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ssn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td class="d-flex justify-content-center">
                    <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="btn-group" role="group">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-light @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-light @nextDisabled">
        Next
    </a>
</div>

